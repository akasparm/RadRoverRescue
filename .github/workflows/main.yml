##############################################################################
#
# GitGub CI workflow syntax spec:
#    https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
#
# CodeCov github action setup:
#    https://github.com/codecov/codecov-action
#
# CodeCov badge setup:
#    https://docs.codecov.com/docs/status-badges
#
# version 1.1
##############################################################################

name: Run Unit Test and Upload Coverage Report

on:
  # Triggered whenever push to main 
  push:
    branches: [ "development" ]

  # Triggered whenever a pull request is created on main
  pull_request:
    branches: [ "main" ]
    types: [opened]

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build-run-upload:
    # Create a container of the latest Ubuntu, other values could be
    # ubuntu-latest, ubuntu-22.04, etc.
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash       # specify bash for use with docker container
    container:
      image: osrf/ros:humble-desktop # use ROS Humble from docker hub repository
    steps:
      # We want to use GitHub CI checkout version 3 to check out our branch
      - uses: actions/checkout@v3

      # Install OpenCV
      - name: Install opencv 
        run: |   
            sudo apt-get install libopencv-dev 
            sudo apt-get install libopencv-contrib-dev
      - name: Install ROS Humble Packages
        run: |
          sudo apt update
          sudo apt install -y ros-humble-desktop python3-argcomplete
          sudo apt install -y ros-dev-tools
          source /opt/ros/humble/setup.bash
      # Install some system pacakges
      - name: Install build packages
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo apt install -y doxygen lcov gcovr
      - name: CV Bridge
        run: |
          sudo apt-get install -y ros-humble-cv-bridge
          sudo apt-get install -y ros-humble-vision-opencv
          source /opt/ros/humble/setup.bash
      - name: ROS Dep
        run: |
          sudo rosdep init
          rosdep update
          rosdep install --from-paths RarRoverRescue/src -y --ignore-src
      
      # Install Gazebo ROS and other dependencies
      - name: CMake Dependencies for the package
        run: |
          sudo apt install -y ros-humble-gazebo-ros-pkgs
      # Build, run unit test, and generate coverage report
      - name: Configure CMake flags and build exectables
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --cmake-args -DCOVERAGE=1 --packages-select RadRoverRescue
          cmake -D WANT_COVERAGE=ON -D CMAKE_BUILD_TYPE=Debug -S ./ -B build/
          cmake --build build/ --clean-first --target all test_coverage
          
      

      # # Compile and executables
      # - name: Build Coverage
      #   working-directory: ${{github.workspace}}/build
      #   run: make

      # # Run test suite and compute code coverage
      # - name: Run Test Coverage
      #   working-directory: ${{github.workspace}}/build
      #   run: make code_coverage

     
      # Upload coverage result to CodeCov
      - name: Upload coverage result to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ${{github.workspace}}/build/test_coverage.info
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)   
